name: GitOps CD Workflow

on:
  # repository_dispatch:
  #   types: [deploy]
  workflow_dispatch:   # ðŸ‘ˆ allows manual promotion
    inputs:
      image:
        description: "Docker image tag to deploy"
        required: true
      env:
        description: "Environment to deploy to (dev/qa/prod)"
        required: true
        type: choice
        options:
          - dev
          - qa
          - prod

jobs:
  update-manifest:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.env || github.event.client_payload.env }}

    steps:
      - name: Checkout GitOps repo
        uses: actions/checkout@v4

      - name: Set IMAGE and ENV
        run: |
          if [ -n "${{ github.event.client_payload.image }}" ]; then
            echo "IMAGE=${{ github.event.client_payload.image }}" >> $GITHUB_ENV
            echo "ENV=${{ github.event.client_payload.env }}" >> $GITHUB_ENV
          else
            echo "IMAGE=${{ github.event.inputs.image }}" >> $GITHUB_ENV
            echo "ENV=${{ github.event.inputs.env }}" >> $GITHUB_ENV
          fi

      - name: Update deployment.yaml
        run: |
          sed -i "s|image: .*|image: ${{ env.IMAGE }}|g" ${{ env.ENV }}/deployment.yaml
      - name: Update Helm values.yaml
        run: |
          IMAGE_REPO=$(echo ${{ env.IMAGE }} | cut -d: -f1)
          IMAGE_TAG=$(echo ${{ env.IMAGE }} | cut -d: -f2)
          yq e -i ".image.repository = \"$IMAGE_REPO\"" envs/${{ env.ENV }}/values.yaml
          yq e -i ".image.tag = \"$IMAGE_TAG\"" envs/${{ env.ENV }}/values.yaml

      - name: Commit and push
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add ${{ env.ENV }}/deployment.yaml
          git commit -m "Deploy ${{ env.IMAGE }} to ${{ env.ENV }}"
          git push
